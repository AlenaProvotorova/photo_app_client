#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–±–æ—Ä–∫–∏
echo "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–±–æ—Ä–∫–∏..."

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "pubspec.yaml" ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
if [ -f "pubspec.yaml" ]; then
    print_success "pubspec.yaml –Ω–∞–π–¥–µ–Ω"
else
    print_error "pubspec.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É windows
if [ -d "windows" ]; then
    print_success "–ü–∞–ø–∫–∞ windows —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã Windows
    if [ -f "windows/CMakeLists.txt" ]; then
        print_success "CMakeLists.txt –Ω–∞–π–¥–µ–Ω"
    else
        print_error "CMakeLists.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ -d "windows/runner" ]; then
        print_success "–ü–∞–ø–∫–∞ runner —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        print_error "–ü–∞–ø–∫–∞ runner –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
else
    print_error "–ü–∞–ø–∫–∞ windows –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É test
if [ -d "test" ]; then
    print_success "–ü–∞–ø–∫–∞ test —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —Ç–µ—Å—Ç–æ–≤
    test_files=$(find test -name "*.dart" | wc -l)
    if [ $test_files -gt 0 ]; then
        print_success "–ù–∞–π–¥–µ–Ω–æ $test_files —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"
    else
        print_warning "–¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
else
    print_warning "–ü–∞–ø–∫–∞ test –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É lib
if [ -d "lib" ]; then
    print_success "–ü–∞–ø–∫–∞ lib —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º main.dart
    if [ -f "lib/main.dart" ]; then
        print_success "main.dart –Ω–∞–π–¥–µ–Ω"
    else
        print_error "main.dart –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
else
    print_error "–ü–∞–ø–∫–∞ lib –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub Actions workflow
if [ -f ".github/workflows/build-windows.yml" ]; then
    print_success "GitHub Actions workflow –Ω–∞–π–¥–µ–Ω"
else
    print_error "GitHub Actions workflow –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Flutter –Ω–∞—Å—Ç—Ä–æ–µ–Ω
if command -v flutter &> /dev/null; then
    print_success "Flutter —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Flutter
    flutter_version=$(flutter --version | head -n 1)
    print_status "–í–µ—Ä—Å–∏—è Flutter: $flutter_version"
else
    print_error "Flutter –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Windows desktop –≤–∫–ª—é—á–µ–Ω
if flutter config --list | grep -q "enable-windows-desktop: true"; then
    print_success "Windows desktop –≤–∫–ª—é—á–µ–Ω"
else
    print_warning "Windows desktop –Ω–µ –≤–∫–ª—é—á–µ–Ω"
    print_status "–í–∫–ª—é—á–∞–µ–º Windows desktop..."
    flutter config --enable-windows-desktop
fi

print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º pub get
if flutter pub get > /dev/null 2>&1; then
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç—ã..."

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
if flutter test > /dev/null 2>&1; then
    print_success "–¢–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç"
else
    print_warning "–¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Å–±–æ—Ä–∫–∏"
fi

print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Å–±–æ—Ä–∫–∏..."

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–∫–∏ build (—Å–∏–º—É–ª—è—Ü–∏—è)
mkdir -p test_build/windows/runner/Release
echo "test.exe" > test_build/windows/runner/Release/test.exe
echo "test.dll" > test_build/windows/runner/Release/test.dll

print_status "–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞..."

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞
if command -v zip &> /dev/null; then
    cd test_build
    if zip -r ../test_archive.zip windows/runner/Release/* > /dev/null 2>&1; then
        print_success "ZIP –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        cd ..
        rm -rf test_build test_archive.zip
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ ZIP –∞—Ä—Ö–∏–≤–∞"
        cd ..
        rm -rf test_build
    fi
else
    print_warning "zip –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∞—Ä—Ö–∏–≤–∞"
    rm -rf test_build
fi

print_success "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
print_status "–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –¥–ª—è —Å–±–æ—Ä–∫–∏ –≤ GitHub Actions"
