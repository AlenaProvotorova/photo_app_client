import 'package:dio/dio.dart';

void main() async {
  print('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...\n');

  final dio = Dio();

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∫—à–Ω URL (–æ–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
  final productionUrl = 'https://api.fastselect.ru/api/';
  final productionBaseUrl = 'https://api.fastselect.ru/';

  try {
    print('üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä—É...');
    print('URL: $productionUrl');

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –±–∞–∑–æ–≤—ã–π URL
    print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π URL: $productionBaseUrl');
    final baseResponse = await dio.get(
      productionBaseUrl,
      options: Options(
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
        },
      ),
    );
    print('‚úÖ –ë–∞–∑–æ–≤—ã–π URL –¥–æ—Å—Ç—É–ø–µ–Ω! –°—Ç–∞—Ç—É—Å: ${baseResponse.statusCode}');

    // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç
    final response = await dio.get(
      productionUrl,
      options: Options(
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
        },
      ),
    );

    print('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ!');
    print('–°—Ç–∞—Ç—É—Å: ${response.statusCode}');
    print('–ó–∞–≥–æ–ª–æ–≤–∫–∏: ${response.headers}');
    print('–î–∞–Ω–Ω—ã–µ: ${response.data}');
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:');
    if (e is DioException) {
      print('–¢–∏–ø –æ—à–∏–±–∫–∏: ${e.type}');
      print('–°–æ–æ–±—â–µ–Ω–∏–µ: ${e.message}');
      print('–°—Ç–∞—Ç—É—Å –∫–æ–¥: ${e.response?.statusCode}');
      print('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${e.response?.data}');

      if (e.type == DioExceptionType.connectionError) {
        print('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
        print('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
        print('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
        print('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
      }
    } else {
      print('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: $e');
    }
  }

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL
  final localUrl = 'http://127.0.0.1:3000/api/';

  try {
    print('\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É...');
    print('URL: $localUrl');

    final response = await dio.get(
      localUrl,
      options: Options(
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
        },
      ),
    );

    print('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω!');
    print('–°—Ç–∞—Ç—É—Å: ${response.statusCode}');
  } catch (e) {
    print('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $e');
  }

  print('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}
