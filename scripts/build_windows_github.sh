#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∫–∏ Windows –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ GitHub Actions
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É Windows –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ GitHub Actions..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "pubspec.yaml" ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ git –Ω–∞—Å—Ç—Ä–æ–µ–Ω
if [ ! -d ".git" ]; then
    print_error "–≠—Ç–æ –Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å remote origin
if ! git remote get-url origin > /dev/null 2>&1; then
    print_error "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω remote origin"
    print_status "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ remote origin: git remote add origin <your-repo-url>"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
REPO_URL=$(git remote get-url origin)
REPO_NAME=$(echo $REPO_URL | sed 's/.*github.com[:/]\([^/]*\/[^/]*\)\.git.*/\1/')

print_status "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_NAME"
print_status "URL: $REPO_URL"

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
CURRENT_BRANCH=$(git branch --show-current)
print_status "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"

# –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ pubspec.yaml
VERSION=$(grep "version:" pubspec.yaml | sed 's/version: //')
print_status "–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $VERSION"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git
if [ -n "$(git status --porcelain)" ]; then
    print_warning "–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
    print_status "–î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–º–º–∏—Ç..."
    git add .
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
    if [ -z "$1" ]; then
        COMMIT_MSG="Trigger Windows build - $(date '+%Y-%m-%d %H:%M:%S')"
    else
        COMMIT_MSG="$1"
    fi
    
    git commit -m "$COMMIT_MSG"
    print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã: $COMMIT_MSG"
else
    print_status "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
fi

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub
print_status "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub..."
if git push origin $CURRENT_BRANCH; then
    print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ GitHub"
    exit 1
fi

# –í—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫–∏
echo ""
print_success "–°–±–æ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
echo -e "${BLUE}üîó Actions:${NC} https://github.com/$REPO_NAME/actions"
echo -e "${BLUE}üì¶ Releases:${NC} https://github.com/$REPO_NAME/releases"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ GitHub CLI
if command -v gh &> /dev/null; then
    print_status "GitHub CLI –Ω–∞–π–¥–µ–Ω. –û—Ç–∫—Ä—ã–≤–∞–µ–º Actions..."
    gh run list --limit 1
    echo ""
    print_status "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "gh run watch"
else
    print_warning "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:"
    echo "brew install gh"
fi

echo ""
print_success "–ì–æ—Ç–æ–≤–æ! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º —Å–±–æ—Ä–∫–∏ –≤ GitHub Actions"
print_status "–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏ —Å–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ Actions"
