#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞ —Å Windows –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
echo "üéâ –°–æ–∑–¥–∞–µ–º —Ä–µ–ª–∏–∑ —Å Windows –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "pubspec.yaml" ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ pubspec.yaml
VERSION=$(grep "version:" pubspec.yaml | sed 's/version: //')
print_status "–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $VERSION"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç dev, beta, alpha
if [[ $VERSION == *"dev"* ]] || [[ $VERSION == *"beta"* ]] || [[ $VERSION == *"alpha"* ]]; then
    print_warning "–í–µ—Ä—Å–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ-—Ä–µ–ª–∏–∑–Ω—ã–µ –º–µ—Ç–∫–∏: $VERSION"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ-—Ä–µ–ª–∏–∑–∞? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_status "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
fi

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
TAG_NAME="v$VERSION"
print_status "–°–æ–∑–¥–∞–µ–º —Ç–µ–≥: $TAG_NAME"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–≥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if git tag -l | grep -q "^$TAG_NAME$"; then
    print_error "–¢–µ–≥ $TAG_NAME —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    print_status "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏:"
    git tag -l | tail -5
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
if git tag -a "$TAG_NAME" -m "Release $TAG_NAME"; then
    print_success "–¢–µ–≥ $TAG_NAME —Å–æ–∑–¥–∞–Ω"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–≥–∞"
    exit 1
fi

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–≥ –≤ GitHub
print_status "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–≥ –≤ GitHub..."
if git push origin "$TAG_NAME"; then
    print_success "–¢–µ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ–≥–∞"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
REPO_URL=$(git remote get-url origin)
REPO_NAME=$(echo $REPO_URL | sed 's/.*github.com[:/]\([^/]*\/[^/]*\)\.git.*/\1/')

print_success "–†–µ–ª–∏–∑ $TAG_NAME —Å–æ–∑–¥–∞–Ω!"
echo ""
print_status "–°—Å—ã–ª–∫–∏:"
echo -e "${BLUE}üîó Actions:${NC} https://github.com/$REPO_NAME/actions"
echo -e "${BLUE}üì¶ Releases:${NC} https://github.com/$REPO_NAME/releases"
echo -e "${BLUE}üè∑Ô∏è  Tag:${NC} https://github.com/$REPO_NAME/releases/tag/$TAG_NAME"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ GitHub CLI
if command -v gh &> /dev/null; then
    print_status "GitHub CLI –Ω–∞–π–¥–µ–Ω. –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–ª–∏–∑..."
    gh release view "$TAG_NAME" || print_warning "–†–µ–ª–∏–∑ –µ—â–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç"
else
    print_warning "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ª–∏–∑–∞–º–∏:"
    echo "brew install gh"
fi

print_success "–ì–æ—Ç–æ–≤–æ! –†–µ–ª–∏–∑ $TAG_NAME –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏"
