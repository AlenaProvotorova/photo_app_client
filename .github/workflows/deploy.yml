name: Deploy Photo App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Тестирование
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test

  # Сборка веб-версии
  build-web:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build web
        run: |
          flutter build web \
            --release \
            --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }} \
            --dart-define=IS_PRODUCTION=true \
            --dart-define=ENABLE_LOGGING=false \
            --dart-define=ENABLE_ANALYTICS=true
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./build/web

  # Сборка Android APK
  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Build Android APK
        run: |
          flutter build apk \
            --release \
            --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }} \
            --dart-define=IS_PRODUCTION=true \
            --dart-define=ENABLE_LOGGING=false \
            --dart-define=ENABLE_ANALYTICS=true
      
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: photo-app-android
          path: build/app/outputs/flutter-apk/app-release.apk

  # Сборка iOS
  build-ios:
    needs: test
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build iOS
        run: |
          flutter build ios \
            --release \
            --no-codesign \
            --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }} \
            --dart-define=IS_PRODUCTION=true \
            --dart-define=ENABLE_LOGGING=false \
            --dart-define=ENABLE_ANALYTICS=true
      
      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: photo-app-ios
          path: build/ios/iphoneos/Runner.app

  # Сборка десктоп версий
  build-desktop:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build desktop
        run: |
          flutter build ${{ matrix.platform }} \
            --release \
            --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }} \
            --dart-define=IS_PRODUCTION=true \
            --dart-define=ENABLE_LOGGING=false \
            --dart-define=ENABLE_ANALYTICS=true
      
      - name: Upload desktop build
        uses: actions/upload-artifact@v3
        with:
          name: photo-app-${{ matrix.platform }}
          path: build/${{ matrix.platform }}/ 